pipeline {
    agent none

    stages {    
        stage("build") {
            when {
                changeset "**/vote/**"
            }
            agent {
                docker {
                    image "python:2.7.16-slim"
                    args "--user root"
                }
            }
            steps {
                echo "Compiling vote App"
                dir("vote") {
                    sh "pip install -r requirements.txt"
                }                        
            }
        }
        stage("test") {
            when {
                changeset "**/vote/**"
            }
            agent {
                docker {
                    image "python:2.7.16-slim"
                    args "--user root"
                }
            }
            steps {
                echo "Running unit tests on vote app"
                dir("vote") {
                    sh "pip install -r requirements.txt"
                    sh "nosetests -v"
                }
            }
        }
        stage("docker-package") {
            agent any
            when {
                changeset "**/vote/**"
                branch "master"
            }
            steps {
                echo "Packaging vote app with Docker"
                script {
                    docker.withRegistry("https://index.docker.io/v1/","dockerlogin") {
                        def workerImage = docker.build("prantik/vote:v${env.BUILD_ID}", "./vote")
                        workerImage.push()
                        workerImage.push("${env.BRANCH_NAME}")
                    }
                }
            }
        }        
    }

    post {
        always {            
            echo "Building multibranch pipeline for vote is completed."
        }
    }
}