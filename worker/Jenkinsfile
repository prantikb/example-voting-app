pipeline {
    
    agent none   

    stages {    
        stage("build") {

            when{
                changeset "**/worker/**"
            }

            agent {
                docker {
                    image "maven:3.6.1-jdk-8-slim"
                }
            } 
            
            steps {
                echo "building Worker App"
                dir("worker") {
                    sh "mvn compile"
                }                        
            }
        }
        stage("test") {

            when{
                changeset "**/worker/**"
            }

            agent {
                docker {
                    image "maven:3.6.1-jdk-8-slim"
                }
            } 
            
            steps {
                echo "Running unit tests on worker app"
                dir("worker") {
                    sh "mvn clean test"
                }
            }
        }
        stage("package") {

            when{
                branch "master"
                changeset "**/worker/**"
            }

            agent {
                docker {
                    image "maven:3.6.1-jdk-8-slim"
                }
            } 
            
            steps {
                echo "Packaging Worker App into a jarfile"
                dir("worker") {
                    sh "mvn package -DskipTests"
                    archiveArtifacts artifacts: "**/target/*.jar", fingerprint: true
                }
            }
        }  
        stage("docker-package") {
            agent any
            when {
                changeset "**/worker/**"
                branch "master"
            }
            steps {
                echo "Packaging worker app with Docker"
                script {
                    docker.withRegistry("https://index.docker.io/v1","dockerlogin") {
                        def workerImage = docker.build("prantik/worker:v${env.BUILD_ID}", "./worker")
                        workerImage.push()
                        workerImage.push("latest")
                    }
                }
            }
        }  
    }

    post {
        always {            
            echo "the job is complete."
        }
    }
}